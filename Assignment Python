{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7b9748ae-548c-4661-bd15-0db3de98b8c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Questio Answer(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f9f66a88-e17e-4e13-b12d-f99b5fe2888f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#(i) For loop "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4c96da5f-8be7-4358-a40a-16feb92dbf99",
   "metadata": {},
   "outputs": [],
   "source": [
    "#In Python, for loop is used to run a block of code for a certain number of times\n",
    "#It is used to iterate over any sequences such as list,tuple,string,etc."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ced62102-95f2-44ea-9ed3-69ca6991aed9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Example list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "21a5904f-3627-4817-87bc-8572495810b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "l=[1,2,3,4,5,6,7,8]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "07e281bd-48b1-44b4-a86b-3650f77e1a2d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n"
     ]
    }
   ],
   "source": [
    "for i in l:\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7c160e79-dda3-4ed0-953f-9b62771d1f75",
   "metadata": {},
   "outputs": [],
   "source": [
    "#string"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f5ad2023-72a5-43e3-9937-5e86fa8ceabb",
   "metadata": {},
   "outputs": [],
   "source": [
    "str=\"sudh\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "6c6b9f8f-1809-440b-b69d-26a178a56786",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "s\n",
      "u\n",
      "d\n",
      "h\n"
     ]
    }
   ],
   "source": [
    "for i in str:\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "71716bc6-0860-4a0a-923b-9fc02f614ad6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0aebc0ba-12eb-4e1c-ae78-3c24b8c315a7",
   "metadata": {},
   "outputs": [],
   "source": [
    "l=[\"abc\",\"sudh\",\"naik\",\"ram\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "16fffd11-bb04-4f87-ba20-263c9e536de3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "abc\n",
      "sudh\n"
     ]
    }
   ],
   "source": [
    "for i in l:\n",
    "    if i==\"naik\":\n",
    "        break\n",
    "    print(i)\n",
    "else :\n",
    "    print(\" if for loop is able to complete itself then only else will execute\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "688d2153-5c8b-45dd-b73e-e16b3ad7dd0d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['abc', 'sudh', 'naik', 'ram']"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "l"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "16843ece-1487-4e5e-acb8-4c2cb01d3b6c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "abc\n",
      "sudh\n",
      "ram\n",
      "execute this if for loop is able to complete itself\n"
     ]
    }
   ],
   "source": [
    "for i in l:\n",
    "    if i==\"naik\":\n",
    "        continue\n",
    "    print(i)\n",
    "else :\n",
    "     print(\"execute this if for loop is able to complete itself\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "458374cc-4fc8-4711-b94a-9afca35029db",
   "metadata": {},
   "outputs": [],
   "source": [
    "#while loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "a6497a34-8666-4b2f-a6aa-e5f39309c101",
   "metadata": {},
   "outputs": [],
   "source": [
    "#A\"while\" Loop is used to repeat a specific block of code an unknown number of times until a condition is met."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "980984ad-2071-4259-918d-f4888327be36",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "103ae6c7-162b-491c-aec6-4a0ae36d24a2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5\n"
     ]
    }
   ],
   "source": [
    "a=1\n",
    "while a<=5:\n",
    "    print(a)\n",
    "    a=a+1\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "790f46de-4c0f-40ce-b46c-73b4e16b0429",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter your number 5\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "15"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n=int(input(\"enter your number\"))\n",
    "star_num=0\n",
    "counter=1\n",
    "while counter<=n:\n",
    "    star_num=star_num+counter\n",
    "    counter=counter+1\n",
    "star_num"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "3886a245-36cb-435b-8980-c8a0187f60dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "#QuestionAnswer(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "9aeee24e-a132-4512-acfc-10a6b6cee183",
   "metadata": {},
   "outputs": [],
   "source": [
    "# sum useing For loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "d88ee54b-f70a-446b-a88e-148bc2abc4e8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "55\n"
     ]
    }
   ],
   "source": [
    "num=10\n",
    "sum=0\n",
    "for i in range(1,num+1):\n",
    "    sum=sum+i\n",
    "print(sum)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "8e86f67c-3ec0-4cd9-aaa2-72c2f4aa11ce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3628800\n"
     ]
    }
   ],
   "source": [
    "num=10\n",
    "product=1\n",
    "for i in range(1,num+1):\n",
    "    product=product*i\n",
    "print(product)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "bb84b6a9-095d-45cc-9931-c28d2468bb3c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# sum useing \"While Loop\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "e94c69a6-e6a1-4fa1-b689-b853d997b2fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "55"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "starting_num=0\n",
    "counter=1\n",
    "while counter<=10:\n",
    "    starting_num=starting_num+counter\n",
    "    counter=counter+1\n",
    "starting_num"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "44cc82f7-8017-49e4-84d5-9bdcc0a01051",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3628800"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "product=1\n",
    "counter=1\n",
    "while counter<=10:\n",
    "    product=product*counter\n",
    "    counter=counter+1\n",
    "product\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "c2a7655c-fdf3-4fd0-b0c8-8f514ed9ea7a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Question Answer(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "1e128919-b098-46f2-b673-b2f821e15bf0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#use For Loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "5e38f975-a9e6-43b7-8909-a9cf6c8870d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "l1=[]\n",
    "for i in range(1,101):\n",
    "    if (i**3)%4==0 and (i**3)%5==0:\n",
    "        l1.append(i)\n",
    "l1\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "ddcaea45-c431-47c5-924b-deeabbeb4682",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Question Answer(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "40ff9282-d4a2-4052-9126-95620b6aa632",
   "metadata": {},
   "outputs": [],
   "source": [
    "string= \"i want to become a data scientist\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "3f787df8-665d-414b-96cc-4473ab1f182a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "12\n"
     ]
    }
   ],
   "source": [
    "count=0\n",
    "vowels=[\"a\",\"e\",\"i\",\"o\",\"u\"]\n",
    "for i in range(len(string)):\n",
    "    if string[i] in vowels:\n",
    "        count=count+1\n",
    "print(count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0f40b18f-1a5d-4d4b-bcbd-530fc3d9b95d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
