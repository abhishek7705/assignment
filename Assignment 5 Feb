{
 "cells": [
  {
   "cell_type": "raw",
   "id": "a7c50596-b882-4cc1-9f06-15f4df5085d8",
   "metadata": {},
   "source": [
    "Question(1)Answer"
   ]
  },
  {
   "cell_type": "raw",
   "id": "65c46ad1-6369-4def-a783-d8ec626a9d5e",
   "metadata": {},
   "source": [
    "Class are ueser-defined data types that act as the blueprint for individual objects,attribute and methods.And object are instance of class created with specifically definied data."
   ]
  },
  {
   "cell_type": "raw",
   "id": "3cba5d80-7a9c-48f3-b71f-5c0ceda11c6f",
   "metadata": {},
   "source": [
    "Examples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4ca6e3ec-bf01-409f-af45-0b7336bbe459",
   "metadata": {},
   "outputs": [],
   "source": [
    "class data_science:\n",
    "    \n",
    "    def syllabus(self):\n",
    "        print(\"this is my syllabus for data science masters\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "78932769-c9ce-45a4-be9c-a82453e73a3f",
   "metadata": {},
   "outputs": [],
   "source": [
    "class web_dev:\n",
    "    \n",
    "    def syllabus(self):\n",
    "        print(\"this is my syllabus for web dev\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b7c418ed-6f4e-44f3-a06d-09864d69f768",
   "metadata": {},
   "outputs": [],
   "source": [
    "def class_parcer(class_object):\n",
    "    for i in class_object:\n",
    "        i.syllabus()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "48da9244-7a05-4aaa-bbf2-e048566edd26",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_science=data_science()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a7607f03-fd3d-4eb2-b248-00733bc0b5c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "web_dev=web_dev()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "03d73126-8697-4507-ac2d-16e437abc338",
   "metadata": {},
   "outputs": [],
   "source": [
    "class_object=[data_science,web_dev]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f3aa4766-8ed0-4598-bf38-fc50c491a4f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this is my syllabus for data science masters\n",
      "this is my syllabus for web dev\n"
     ]
    }
   ],
   "source": [
    "class_parcer(class_object)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "d586caa5-d932-4dab-98f1-cd83bc299d10",
   "metadata": {},
   "source": [
    "Question(2)Answer"
   ]
  },
  {
   "cell_type": "raw",
   "id": "4c2f1dee-1917-4189-87f0-eea73b12c06d",
   "metadata": {},
   "source": [
    "Name of four pillars\n",
    "1.) Polymorphism\n",
    "2.) Encapsulation\n",
    "3.) Inheritance\n",
    "4.) Abstraction"
   ]
  },
  {
   "cell_type": "raw",
   "id": "d2edfff3-9ac8-499c-b981-b983b90d122e",
   "metadata": {},
   "source": [
    "Question(3)Answer"
   ]
  },
  {
   "cell_type": "raw",
   "id": "d1266747-da5c-40c8-b05e-8d92e6477c6c",
   "metadata": {},
   "source": [
    "The __init__() method is the python equivalent of the C++ constructor in an object-oriented apporach.\n",
    "The __init__() function is called every time an object is created from a class.\n",
    "The __init__() method lets the class initialize the object attributes and serves no other purpose.\n",
    "It is only used within classes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "583e6b55-b6af-41db-8422-6f6526afc49e",
   "metadata": {},
   "outputs": [],
   "source": [
    "class car:\n",
    "    \n",
    "    def __init__(self ,year,make,model,speed):\n",
    "        \n",
    "        self.__year=year\n",
    "        self.__make=make\n",
    "        self.__model=model\n",
    "        self.__speed=0\n",
    "        \n",
    "    def set_speed(self,speed):\n",
    "        self.__speed=0 if speed<0 else speed\n",
    "        \n",
    "    def get_speed(self):\n",
    "        return self.__speed\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "c2b935cd-c11a-4bae-8965-bf3f4e155729",
   "metadata": {},
   "outputs": [],
   "source": [
    "c=car(2023,\"toyta\",\"innova\",12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "1b457c1b-9a6a-4704-98a2-606fdb9b1bff",
   "metadata": {},
   "outputs": [],
   "source": [
    "c.set_speed(-2345)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "09efa8d7-5864-4f23-afc5-a05f4166a113",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.get_speed()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "97c0bc19-a96c-4e26-8afb-2bc0295cd225",
   "metadata": {},
   "outputs": [],
   "source": [
    "c.set_speed(23)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "fe983473-c20c-4cb6-9183-86c45c84154c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "23"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.get_speed()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "45c22709-8b85-4e7f-b711-c622ec2f3c06",
   "metadata": {},
   "source": [
    "Question(4) Answer"
   ]
  },
  {
   "cell_type": "raw",
   "id": "a157886c-16a4-4b40-a66d-9bd2bd9a4a26",
   "metadata": {},
   "source": [
    "The \"self\" keyword in python is used to refer to attributes from inside class methods"
   ]
  },
  {
   "cell_type": "raw",
   "id": "a6b2e08b-acb9-41fc-aa32-b0d0c44c886e",
   "metadata": {},
   "source": [
    "Question(5) Answer"
   ]
  },
  {
   "cell_type": "raw",
   "id": "db3db937-ccad-475a-9873-0b025b806f64",
   "metadata": {},
   "source": [
    "Inheritance allows us to define a class that inherits all the methods and properties from another class.\n",
    "5 types of Inheritance.\n",
    "1) Single inheritance\n",
    "2) Multiple Inheritance\n",
    "3) Multilevel Inheritance\n",
    "4) Hybrid Inheritance\n",
    "5) Hierachical Inheritance"
   ]
  },
  {
   "cell_type": "raw",
   "id": "3eae9c88-c029-49fa-a813-32a641ea1cdc",
   "metadata": {},
   "source": [
    "1)Single Inheritance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9336979e-b567-4fb0-b780-ffcd4f4a5aae",
   "metadata": {},
   "outputs": [],
   "source": [
    "class test:\n",
    "    \n",
    "    def test_meth(self):\n",
    "        return \"this is my first class\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0810f46a-0af7-40c8-9595-f5ce6008d324",
   "metadata": {},
   "outputs": [],
   "source": [
    "class child_test(test):\n",
    "    pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d60b8952-d801-47e0-a3bd-da44f5472169",
   "metadata": {},
   "outputs": [],
   "source": [
    "c=child_test()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "fddba52b-dc7d-4934-9121-1a3d9ca9b2bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'this is my first class'"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c.test_meth()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "3e045c4d-e41a-4879-8501-f62b2846afb3",
   "metadata": {},
   "source": [
    "2) Multiple inheritance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "72fff995-0659-43e1-a2df-0f002a99da54",
   "metadata": {},
   "outputs": [],
   "source": [
    "class class1:\n",
    "    \n",
    "    def test_class1(self):\n",
    "        return \"this is a meth from class1\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "bf55242b-ae60-491c-ac08-56acf8c794fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "class class2(class1):\n",
    "    \n",
    "    def test_class2(self):\n",
    "        return \"this is a meth from class2\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ccccf2d9-208e-46fc-b089-afd3df9b7ba4",
   "metadata": {},
   "outputs": [],
   "source": [
    "class class3(class2):\n",
    "    pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "6ad8c78e-6fef-4372-b8c0-1bea33c7a7e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "class3_object=class3()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "09fb2b32-4ac6-44fc-9c95-522bba0aff21",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'this is a meth from class1'"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "class3_object.test_class1()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "14abebaf-29ae-486b-b234-27498ae3cdbd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'this is a meth from class2'"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "class3_object.test_class2()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "99b2b22b-908c-4dd2-b7c4-192b23343426",
   "metadata": {},
   "source": [
    "3)Multilevel inheritance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "2f5979f1-6892-4204-9bf4-bad81e5079d1",
   "metadata": {},
   "outputs": [],
   "source": [
    "class text:\n",
    "    \n",
    "    def test_class(self):\n",
    "        return \"this is a class\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "bdb3fa4d-594b-4b02-9315-fb22d31ae14d",
   "metadata": {},
   "outputs": [],
   "source": [
    "class text1:\n",
    "    \n",
    "    def test_class1(self):\n",
    "        return \"this is a class1\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "ccc8c17c-3826-47e0-8604-ac5c572a386f",
   "metadata": {},
   "outputs": [],
   "source": [
    "class text3(text,text1):\n",
    "    pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "beaaffe0-e5f7-4d41-86e4-1aa9e648da1f",
   "metadata": {},
   "outputs": [],
   "source": [
    "class_obj=text3()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "e431e850-982d-48cb-9b62-299e409eb067",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'this is a class'"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "class_obj.test_class()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c42c783d-735e-4d11-afc4-af89b96affea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'this is a class1'"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "class_obj.test_class1()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "348d6d1f-c691-4f44-81b8-a868473dca80",
   "metadata": {},
   "source": [
    "4) Hirechical inheritance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dd22019c-3ee7-4436-b12e-eea02c016ac5",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
